[tool.poetry]
name = "voice-doc-intelligence"
version = "0.1.0"
description = "Voice-enabled document intelligence system"
authors = ["Nikhil Bindal <nikhil.bindal@outlook.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
# Core Framework
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.30.0"}
pydantic = "^2.8.0"
pydantic-settings = "^2.3.0"
av = "15.0.0"

# AI/LLM Orchestration
llama-index = "^0.10.50"
llama-index-vector-stores-qdrant = "^0.2.8"
crewai = "^0.148.0"
onprem = "^0.16.3"
vellum-ai = "^0.3.0"

# Vector/Graph Databases
qdrant-client = "^1.10.0"
pyTigerGraph = "^1.5.0"
tigergraph-mlworkbench = "^1.0.0"

# Voice Processing
openai = "^1.35.0"
deepgram-sdk = "^3.2.0"  # Deepgram Nova-3 SDK
cartesia = "^1.0.0"  # Cartesia Sonic TTS
livekit = "^1.0.3"  # Updated to match livekit-agents requirement

# LiveKit Agents for Voice AI
livekit-agents = {extras = ["openai", "silero", "deepgram", "cartesia", "turn-detector"], version = "^1.0.0"}

# Additional voice processing
webrtcvad = "^2.0.10"
sounddevice = "^0.5.0"  # Updated to match livekit-agents requirement
pyaudio = "^0.2.11"

# Document Processing
docling = "^1.5.0"
pypdf = "^4.2.0"
python-docx = "^1.1.0"
unstructured = "^0.14.0"

# Workflow Orchestration
temporalio = "^1.6.0"
dagster = "^1.7.0"

# Streaming/Events
pulsar-client = "^3.5.0"
aiokafka = "^0.11.0"

# Database/Cache
asyncpg = "^0.29.0"
redis = "^5.0.0"
motor = "^3.4.0"

# Security
ironcore-alloy = "^0.13.0"
cryptography = "^42.0.0"

# Observability
opentelemetry-api = "^1.25.0"
opentelemetry-instrumentation-fastapi = "^0.56b0"
prometheus-client = "^0.22.0"  # Updated to match livekit-agents requirement

# ML/Data
numpy = "^1.26.0"
pandas = "^2.2.0"
scikit-learn = "^1.5.0"
torch = "^2.2.2"
onnxruntime = "1.22.0"

# Development
pytest = "^8.2.0"
pytest-asyncio = "^0.23.0"
black = "^24.4.0"
ruff = "^0.5.0"
mypy = "^1.10.0"

[tool.poetry.group.dev.dependencies]
ipython = "^8.25.0"
jupyter = "^1.0.0"
pre-commit = "^3.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.mypy]
python_version = "3.11"
strict = true